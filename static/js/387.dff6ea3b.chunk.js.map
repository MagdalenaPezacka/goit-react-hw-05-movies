{"version":3,"file":"static/js/387.dff6ea3b.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/fetchApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  text-align: center;\n  padding-top: 30px;\n  padding-bottom: 30px;\n  gap: 20px;\n`;\n\nexport const CastCard = styled.div`\n  :hover {\n    scale: 1.1;\n  }\n`;\n\nexport const Paragraf = styled.p`\n  margin: 5px;\n`;","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from '../../components/fetchApi';\n\nimport { LuSearch } from 'react-icons/lu';\nimport { CastCard, CastContainer, Paragraf } from './Cast.styled';\n\nconst Cast = () => {\n  const [moviesCast, setMoviesCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchCast(movieId).then(({ cast }) => {\n      setMoviesCast(cast);\n    });\n  }, [movieId]);\n\n  return (\n    <CastContainer>\n      {moviesCast.length > 0 ? (\n        moviesCast.map(({ id, profile_path, character, name }) => (\n          <CastCard key={id}>\n            {profile_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n                alt={name}\n              />\n            ) : (\n              <LuSearch size={22}></LuSearch>\n            )}\n\n            <Paragraf>{name}</Paragraf>\n\n            <Paragraf>Character : {character.substr(0, 9)}</Paragraf>\n          </CastCard>\n        ))\n      ) : (\n        <Paragraf> Sorry, there isn't any info</Paragraf>\n      )}\n    </CastContainer>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '487f1c4f82b71f26e1b3085fb9548925';\n\nexport const notify = {\n  position: 'top-center',\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'colored',\n};\n\nexport const fetchTrending = async () => {\n  const res = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const fetchSearchMovies = async query => {\n  const res = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return res.data;\n};\n\nexport const fetchDetailsMovie = async movieId => {\n  const res = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n};\n\nexport const fetchCast = async movieId => {\n  const res = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n};\n\nexport const fetchReviews = async movieId => {\n  const res = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return res.data;\n};"],"names":["CastContainer","styled","_templateObject","_taggedTemplateLiteral","CastCard","_templateObject2","Paragraf","_templateObject3","_useState","useState","_useState2","_slicedToArray","moviesCast","setMoviesCast","movieId","useParams","useEffect","fetchCast","then","_ref","cast","_jsx","children","length","map","_ref2","id","profile_path","character","name","_jsxs","src","concat","alt","LuSearch","size","substr","axios","API_KEY","notify","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","fetchTrending","_asyncToGenerator","_regeneratorRuntime","_callee","res","_context","prev","next","sent","abrupt","data","stop","apply","arguments","fetchSearchMovies","_callee2","query","_context2","_x","fetchDetailsMovie","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_context4","_x3","fetchReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}